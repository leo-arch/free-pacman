#!/bin/sh
#Little pacman wrapper to make pacman free-software aware (only for package 
#+installation) It also adds a new option to ppacman to check for non-free 
#+installed packages (-c | --check)

##COLORS##
white="\033[1;37m"
green="\033[1;32m"
red="\033[1;31m"
yellow='\033[1;33m'
nc="\033[0m"

user="$([[ $SUDO_USER ]] && echo $SUDO_USER || echo $USER)"
source="https://git.parabola.nu/blacklist.git/plain/blacklist.txt"
blacklist_file="/tmp/pacman_pkgs_bl"

#Download blacklist, if it doesn't exist yet
if ! [[ -f $blacklist_file ]]; then
	echo -ne "Downloading packages blacklist... "
	sudo -u $user curl -s $source | sed 's/  //g' > $blacklist_file
	if [[ $? -eq 0 ]]; then 
		echo -e "${green}OK$nc"
	else
		echo -e "\n${red}Error${nc}: try again"
		exit 1
	fi
fi

if [[ $1 == "-C" || $1 == "--check" ]]; then
	while read line; do
		blacklisted="$(grep "^$line" $blacklist_file)"		
		[[ $blacklisted ]] && echo $blacklisted | grep --color=always "^${line}:"
	done <<< $(pacman -Qqn)
	exit 0
fi

#Proceed only in case of installation (-S argument)
#+Otherwise, just run the intended command
if [[ $@ != "-S "* && $@ != "--sync "* ]]; then 
	/usr/bin/pacman $@
	exit 0
fi
#Check all arguments, except "-S", that is, all pkgs to be installed, against the 
#+blacklist
for arg in "$@"; do
	if [[ $arg != $1 ]]; then
		#If non-free, warn the user
		blacklisted="$(cat $blacklist_file | grep "^${arg}:")"
		if [[ $blacklisted ]]; then
			echo -e "${white}'$arg'$nc is a ${red}non-free${nc} package"
			echo -e "${yellow}Description${nc}: $blacklisted"
			alternative="$(echo $blacklisted | cut -d":" -f2)"
			echo -e "${green}Alternative package${nc}: $([[ $alternative ]] && \
					echo "$white$alternative$nc" || echo "none")"
			read -p "Do you want to install '$arg' anyway? (y/N) " answer
			case $answer in
				""|n|N) continue;;
				y|Y) /usr/bin/pacman $1 $arg;;
				*) echo "Wrong answer"; continue;;
			esac
			exit 0
		else #if free-software, just fire up the command
			/usr/bin/pacman $1 $arg
		fi
	fi
done
